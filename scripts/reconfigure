#!/bin/bash
source "$(dirname "$0")/helpers/common.sh"
shopt -s expand_aliases
alias logger="/usr/bin/logger -t reconfigure"

if [[ -t 0 ]] && [[ -z "$LOGONLY" ]]; then
    alias write="echo"
else
    alias write="true"
fi

log() {
    local priority="$1" fdn msg pfx
    if [[ "$priority" = err ]]; then
        fdn=2
        pfx="${cRed}ERROR${cReset} "
    else
        #pfx="$cGreen$uCaret$cReset "
        fdn=1
    fi
    while read msg ; do
        write "$pfx$msg" >&$fdn
        logger -p "$priority" -- "$(sed 's/\x1b\[[0-9;]*m//g' <<< "$msg")"
    done
}

run() {
    {
        _run 2>&1 1>&3 3>&- | log err
    } 3>&1 1>&2 | log notice
}

_run() {
    set -e
    local srcdir="$CONFIG_REPO"
    local thisdir="$(abs `dirname "$0"`)"
    local confdir=`postconf -h config_directory`
    local changeset="$(date_path)"
    local outdir="$confdir/history/$changeset"
    local builddir="$outdir/build"
    local helpers="$thisdir/helpers"
    local static="$thisdir/static"
    local builddirq="$(printf '%q' "$builddir")"

    make_file_actions() {
        local bn="$1" dest="$2"
        local oldfile="$bn.old" newfile="$bn.new" title="$bn"
        local apfile="$title.apply.sh"
        local rvfile="$title.revert.sh"
        diff "$oldfile" "$newfile" | sed 's/^/# /' >> "$apfile"
        diff "$newfile" "$oldfile" | sed 's/^/# /' >> "$rvfile"
        echo "cd $builddirq && install -v -p -m 0644 \\" | teeq -a "$apfile" "$rvfile"
        echo "    $newfile $dest" >> "$apfile"
        echo "    $oldfile $dest" >> "$rvfile"
    }

    echo "== ${cMagentaLight}Changeset ${cCyan}${changeset}${cReset}"
    mkdir -p "$builddir"
    pushdq "$builddir"

    local is_postfix_change=0 is_dovecot_change=0 is_srsd_change=0

    # postfix main.cf
    postconf -n | grep -v '^config_directory =' > main.cf.old
    postconf -n -c "$srcdir" | grep -v '^config_directory =' > main.cf.new
    if ! md5cmp main.cf.old main.cf.new ; then
        make_file_actions main.cf /etc/postfix/main.cf
        is_postfix_change=1
    fi

    # postfix master.cf
    postconf -M | cat "$static/mastercfhead.txt" - > master.cf.old
    postconf -M -c "$srcdir" | cat "$static/mastercfhead.txt" - > master.cf.new
    if ! md5cmp master.cf.old master.cf.new ; then
        make_file_actions master.cf /etc/postfix/master.cf
        is_postfix_change=1
    fi

    # postfix files
    "$helpers/filesdir_diff" "postfix_files" "$srcdir/files" "$confdir" .
    if [[ -e "postfix_files.apply.sh" ]]; then
        is_postfix_change=1
    fi

    if is_dovecot; then
        # dovecot.conf
        if ! md5cmp "$srcdir/dovecot.conf" /etc/dovecot/dovecot.conf ; then
            cp "$srcdir/dovecot.conf" dovecot.conf.new
            cp /etc/dovecot/dovecot.conf dovecot.conf.old
            make_file_actions dovecot.conf /etc/dovecot/dovecot.conf
            is_dovecot_change=1
        fi
        # dovecot/conf.d files
        "$helpers/filesdir_diff" "dovecot_confd_files" "$srcdir/dovecot" /etc/dovecot/conf.d .
        if [[ -e "dovecot_confd_files.apply.sh" ]]; then
            is_dovecot_change=1
        fi
    fi

    # SPF
    if is_spf ; then
        if ! md5cmp "$srcdir/policyd-spf.conf" /etc/postfix-policyd-spf-python/policyd-spf.conf ; then
            cp "$srcdir/policyd-spf.conf" policyd-spf.conf.new
            cp /etc/postfix-policyd-spf-python/policyd-spf.conf policyd-spf.conf.old
            make_file_actions policyd-spf.conf \
                /etc/postfix-policyd-spf-python/policyd-spf.conf
            is_postfix_change=1
        fi
    fi

    # SRSD
    if is_srsd ; then
        if ! md5cmp "$srcdir/postsrsd.conf" /etc/default/postsrsd ; then
            cp "$srcdir/postsrsd.conf" postsrsd.conf.new
            cp /etc/default/postsrsd postsrsd.conf.old
            make_file_actions postsrsd.conf /etc/default/postsrsd
            is_srsd_change=1
        fi
    fi
    popdq

    find "$outdir" -type f -print0 | xargs -0 chmod 0644
    local applyfiles
    readarray -t applyfiles < <(ls "$builddir/"*.apply.sh 2>/dev/null)
    if [[ "${#applyfiles[@]}" = 0 ]]; then
        echo "No configuration changes"
        rm -r "$outdir"
    else
        echo "== ${cMagentaLight}Building change script${cReset}"
        local applyfile="$outdir/apply.sh"
        local revertfile="$outdir/revert.sh"
        local header="$(printf "#!/bin/bash\n# $(date)\n# --------------")"
        echo -e "$header\n" | teeq -a "$applyfile" "$revertfile"
        local fa
        local fr
        for fa in "${applyfiles[@]}" ; do
            local fr="$(sed 's/\.apply\.sh$/\.revert\.sh/' <<< "$fa")"
            local ftitle="$(basename $fa | sed -E 's/\.(apply|revert)\.sh//')"
            echo "[${cCyanLight}${ftitle}${cReset}]"
            echo "# $ftitle" >> "$applyfile"| teeq -a "$applyfile" "$revertfile"
            cat "$fa" >> "$applyfile"
            if [[ -e "$fr" ]]; then
                cat "$fr" >> "$revertfile"
            else
                echo "# no revert action" >> "$revertfile"
            fi
            # highlight diff or file list
            grep '^#' "$fa" | sed -E -e 's/^#\s*//' \
                -e "s/^>(.*)/+${cGreen}\1${cReset}/" \
                -e "s/^<(.*)/-${cRed}\1${cReset}/" \
                -e "s/^---$/${cGrey}---${cReset}/" \
                -e "s/^- (.*)/- ${cYellow}\1${cReset}/"
            # add newline
            echo "" | teeq -a "$applyfile" "$revertfile"
            # cleanup
            rm -f "$fa" "$fr"
        done
        echo "== ${cMagentaLight}Running change script${cReset}"
        bash "$applyfile"
        echo "== ${cMagentaLight}Marking as latest${cReset}"
        pushdq "$outdir/.."
        rm -fv latest
        ln -sv "$(basename "$outdir")" latest
        popdq
    fi

    echo "== ${cMagentaLight}Updating postmaps${cReset}"
    "$helpers/postmaps_update" "$confdir"

    local is_reload="$(expr "$is_postfix_change" + "$is_dovecot_change" + "$is_srsd_change")"
    if [[ "$is_reload" -gt 0 ]]; then
        echo "== ${cMagentaLight}Reloading services${cReset}"
        if [[ "$is_postfix_change" = 1 ]]; then
            postfix_reload
        fi
        if [[ "$is_dovecot_change" = 1 ]]; then
            dovecot_reload
        fi
        if [[ "$is_srsd_change" = 1 ]]; then
            service_stop postsrsd
            service_start postsrsd
        fi
    fi

    echo "== ${cMagentaLight}Done${cReset}"
}

run