#!/bin/bash

set -e

username="$1"
if [[ -z "$username" ]]; then
    echo "Usage: email-create <username>" >&2
    exit 1
fi

source "$(dirname "$0")/helpers/common.sh"


thisdir="$(abs `dirname "$0"`)"

alias metaval="$thisdir/helpers/metaval"

pwdfile="$(metaval auth.file)"
gname="$(metaval auth.group)"
alg="$(metaval auth.alg)"
pwopts="$(metaval auth.pwgenopts)"
hdir="$(metaval auth.emaildir)"
shell="$(metaval auth.shell)"
authdir="$(dirname "$pwdfile")"
pwlen="32"

homedir="$hdir/$username"

fail() {
    echo "${cRed}Error$cReset $@" >&2
    exit 1
}
info() {
    echo "$cGreen$uCaret$cReset $@"
}

if [[ "${#username}" -lt 5 ]] || [[ "${#username}" -gt 64 ]]; then
    fail "Username must be between 5 and 64 chars"
fi

regex="^[^.-][a-z0-9_.-]+(@[a-z0-9-]+\.[a-z0-9-.]+)?$"
#regex='^[^.-_][a-z0-9-_.]{3,64}$'
if ! grep -qP "$regex" <<< "$username" ; then
    fail "Username must meet regex $cWhiteLight$regex$cReset"
fi

ucolor="$cCyan$username$cReset"
name="$(sed 's/@.*//' <<< "$username")"
#username="$(sed 's/@/=/g' <<< "$username")"
ncolor="$cCyan$name$cReset"

stripped_file() {
    local src="$1"
    local file="$(mktemp)"
    grep -vP '^\s*#' "$src" > "$file"
    echo "$file"
}

chkfile="$authdir/disallowed_usernames"
if [[ -e "$chkfile" ]]; then
    chkfile_="$(stripped_file "$chkfile")"
    if grep -iq "^$name\$" "$chkfile_" ; then
        fail "The name $ncolor is not allowed"
    fi
    rm "$chkfile_"
fi
chkfile="$authdir/disallowed_usernames_re"
if [[ -e "$chkfile" ]]; then
    chkfile_="$(stripped_file "$chkfile")"
    if grep -iqE -f "$chkfile_" <<< "$name" ; then
        fail "The name $ncolor is not allowed"
    fi
    rm "$chkfile_"
fi

if [[ ! -e "$pwdfile" ]]; then
    touch "$pwdfile" || exit 1
fi

gid="$(grep "^$gname:" /etc/group | awk -F: '{print $3}')"
if [[ -z "$gid" ]]; then
    gid="515"
    info "Creating group $cMagenta$gname$cReset with gid $gid"
    groupadd -g "$gid" "$gname"
fi

if grep -iq "^$username:" "$pwdfile" ; then
    fail "User $ucolor already exists"
fi
if grep -iq "^$username:" /etc/passwd ; then
    fail "User $ucolor is a system user"
fi
if grep -iq "^$username:" /etc/aliases ; then
    fail "User $ucolor is a system alias"
fi

if [[ -e "$hdir" ]]; then
    fail "Directory already exists: $cYellow$hdir$cReset"
fi

lastid="$(awk -F: '{print $3":"$4}' "$pwdfile" | grep ":$gid\$" | awk -F: '{print $1}' | sort | tail -n 1)"
if [[ -z "$lastid" ]]; then
    uid="601"
else
    uid="$(expr "$lastid" + 1)"
fi

password="$(pwgen "$pwopts" "$pwlen" 1)"
mkdir -pv "$hdir"

if [[ "$pwdfile" = '/etc/passwd' ]]; then
    info "Creating system user $ucolor with uid $uid"
    useradd -m -d "$homedir" -g "$gid" -u "$uid" -s "$shell" "$username"
    chpasswd <<< "$username:$password"
else
    info "Creating passwd-file user $ucolor with uid $uid"
    printf -v input '%s\n%s\n' "$password" "$password"
    pwdhash="$(doveadm pw -s "$alg" -u "$username" <<< "$input")"
    line="$username:$pwdhash:$uid:$gid::$homedir:$shell"
    cp "$pwdfile" "$pwdfile~"
    echo "$line" >> "$pwdfile"
    info "Creating home dir $cYellow$homedir$cReset"
    mkdir -p "$homedir"
    chown -R "$uid:$gid" "$homedir"
    passwd_map "$pwdfile" > /dev/null
    info "Updated passwd map"
fi

info "Created $ucolor"