#!/bin/bash

set -e

usage="Usage: email-create <domain> <username>"

source "$(dirname "$0")/helpers/common.sh"


log_err() {
    echo "${cRed}Error$cReset $@" >&2
}

fail() {
    log_err "$@"
    exit 1
}

soft_fail() {
    echo "$@" >&2
    exit 1
}

log_info() {
    echo "$cGreen$uCaret$cReset $@"
}


if [[ "${#@}" -ne 2 ]]; then
    soft_fail "$usage"
fi

thisdir="$(abs `dirname "$0"`)"
alias metaval="$thisdir/helpers/metaval"

authdir="$(metaval auth.dir)"
gid="$(metaval auth.gid)"
uid="$(metaval auth.uid)"
alg="$(metaval auth.alg)"
pwopts="$(metaval auth.pwgenopts)"
maildir="$(metaval auth.emaildir)"
pwlen="32"

pwdfile="$authdir/users.passwd"

[[ -e "$pwdfile" ]] || fail "File not found: $pwdfile"

domain="$1"
username="$2"

domaindir="$maildir/$domain"
if [[ ! -d "$domaindir" ]]; then
     log_err "Domain $domain dir does not exist"
     log_info "$usage"
     exit 1
 fi

homedir="$domaindir/$username"
homedirrel="$domain/$username"

[[ ! -e "$homedir" ]] || fail "Dir $homedir already exists"

if [[ "${#username}" -lt 5 ]] || [[ "${#username}" -gt 64 ]]; then
    fail "Username must be between 5 and 64 chars"
fi

regex="^[^.-][a-z0-9_.-]{2,63}$"
if ! grep -qP "$regex" <<< "$username" ; then
    fail "Username must meet regex ${cWhiteLight}${regex}${cReset}"
fi

ncolor="${cCyan}${username}${cReset}"

stripped_file() {
    local src="$1"
    local file="$(mktemp)"
    grep -vP '^\s*#' "$src" > "$file"
    echo "$file"
}

chkfile="$authdir/disallowed_usernames"
if [[ -e "$chkfile" ]]; then
    chkfile_="$(stripped_file "$chkfile")"
    if grep -iq "^$username\$" "$chkfile_" ; then
        fail "The name $ncolor is not allowed"
    fi
    rm "$chkfile_"
fi
chkfile="$authdir/disallowed_usernames_re"
if [[ -e "$chkfile" ]]; then
    chkfile_="$(stripped_file "$chkfile")"
    if grep -iqE -f "$chkfile_" <<< "$$username" ; then
        fail "The name $ncolor is not allowed"
    fi
    rm "$chkfile_"
fi

touch "$pwdfile" || exit 1

email="${username}@${domain}"
ecolor="${cCyan}${email}${cReset}"

if grep -iq "^$email:" "$pwdfile" ; then
    fail "User $ecolor already exists"
fi
if grep -iq "^$email:" /etc/passwd ; then
    fail "User $ecolor is a system user"
fi
if grep -iq "^$email:" /etc/aliases ; then
    fail "User $ecolor is a system alias"
fi

mkdir -pv "$homedir"
chown "$uid:$gid" "$homedir"
echo "$email::$uid:$gid::$homedirrel/Maildir/:" >> "$pwdfile"

passwd_map "$pwdfile" > /dev/null
log_info "Updated passwd map"

log_info "Created $ecolor"