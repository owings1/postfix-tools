#!/usr/bin/env python3
import os.path
import sys
from common import bins, clrs, exc, exists, pjoin, mapdbfile, meta, modhash, rdjson, wrfile

class Pmap(object):

    def __init__(self, src):
        self.src = src
        self.db = mapdbfile(src)
        self.bname = os.path.basename(self.src)
        self.hashfile = '.'.join((self.db, 'phash'))
        self.stored = None
        self.observed = False

    def read(self):
        if (exists(self.hashfile)):
            self.stored = open(self.hashfile).read()
        if (exists(self.src) and exists(self.db)):
            self.observed = modhash(self.src, self.db)
        return self

    def matches(self):
        return self.stored == self.observed

    def save(self):
        self.read()
        wrfile(self.hashfile, self.observed)
        return self

def main():
    confdir = sys.argv[1]
    pmaps = [Pmap(pjoin(confdir, file)) for file in meta.hashfiles]
    for pmap in pmaps:
        pmap.read()
        if meta.forcemaps or not pmap.matches():
            print('[' + clrs.cyanLight + 'postmap' + clrs.reset + ']', clrs.yellow + pmap.bname + clrs.reset)
            exc([bins.postmap, pmap.src])
            pmap.save()
        

if  __name__ == '__main__':
    main()